Write a blog on Difference between HTTP1.1 vs HTTP2

HTTP2 is much faster and more reliable than HTTP1.1 HTTP1.1 with the keep-alive header, it was possible to have persistent connections. It allowed multiple requests/responses per TCP connection. 

Whereas HTTP2 Introduces the concept of multiplexing that interleaves the requests and responses without head-of-line blocking and does so over a single TCP connection.

HTTP/2 uses HPACK header compression algorithm that is resilient to attacks like CRIME and utilizes static Huffman encoding.

HTTP1.1 is relatively secure since it uses digest authentication, NTLM authentication.
Security concerns from previous versions will continue to be seen in HTTP/2. However, it is better equipped to deal with them due to new TLS features like connection error of type Inadequate_Security.

Expands on the caching support by using additional headers like cache-control, conditional headers like If-Match and by using entity tags. HTTP/2 With the server push feature if the client finds the resources are already present in the cache, it can cancel the pushed stream.



Write a blog about objects and its internal representation in Javascript


Objects and its internal representation in Javascript

Object:
In JavaScript, an object is a standalone entity, with properties and type. Compare it with a cup, for example. A cup is an object, with properties. A cup has a color, a design, weight, a material it is made of, etc. The same way, JavaScript objects can have properties, which define their characteristics.
	
Creating Objects in JavaScript:
By object literal
By creating instance of Object directly (using new keyword)

By object literal:
The syntax of creating object using object literal is given below:

object={property1:value1,property2:value2,........propertyN:valueN}

Property and value is separated by colon(:)

Example:

var person={
fname="xxx";
lname="yyy";
age=25;
};

By creating instance of Object directly (using new keyword):
The syntax of creating object directly is given below:

var objectname=new Object();

Here, new keyword is used to create object.
Example:

var emp=new Object();
emp.id=101;
emp.name="xxx";
emp.salary=50000;

Accessing JavaScript Objects:
The syntax for accessing the property of an object is:
objectName.property
or
objectName[“property”]
Accessing ‘fname’ from example 1 using dot operator,

person.fname

Accessing ‘name’ form example 2 using [],
emp["name"]

